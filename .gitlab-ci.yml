###############################
# Runners + global parts
###############################

.windows_runner:
  tags:
    - docker-windows

stages:
  - build
  - test
  - deploy

###############################
# Conan templates
###############################

.setup_conan:
  script:
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git

.conan_createAndTest:
  stage: build
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    - conan create packaging/conan/tests/libs/ItemModel scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    - conan test packaging/conan/test_package MdtCMakeConfig/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmake MdtCMakeConfig/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmake_find_package_multi MdtCMakeConfig/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/test_cmakedeps MdtCMakeConfig/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE

###############################
# Build & test templates
###############################

.cmake_configure:
  script:
    # The toolchain file expression has to be quoted when using Powershell
    # See https://gitlab.kitware.com/cmake/cmake/-/issues/23109
    # Also, conan after v1.47 requires to specify CMAKE_BUILD_TYPE
    - cmake "-DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake" -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

.build_linux:
  stage: build
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE ../packaging/conan
    - source conanbuild.sh || true  # Workaround to https://gitlab.com/gitlab-org/ci-cd/pipeline-authoring-stack-rank/-/issues/1
    - !reference [.cmake_configure, script]
    - cmake --build . --config $BUILD_TYPE -j4
    - source deactivate_conanbuild.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build

.test_linux:
  stage: test
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE ../packaging/conan
    - ctest --output-on-failure -C $BUILD_TYPE
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build


.build_windows:
  stage: build
  extends:
    - .windows_runner
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE ../packaging/conan
    - ./conanbuild.bat
    - !reference [.cmake_configure, script]
    - cmake --build . --config $BUILD_TYPE -j4
    - ./deactivate_conanbuild.bat
  artifacts:
    expire_in: 1 day
    paths:
      - build

.test_windows:
  stage: test
  extends:
    - .windows_runner
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE ../packaging/conan
    - ctest --output-on-failure -C $BUILD_TYPE
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build

###############################
# Build & test Linux
###############################

.buildAndTest_Linux_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug

build_linux_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_debug
    - .build_linux

test_linux_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_debug
    - .test_linux
  dependencies:
    - build_linux_gcc7_x86_64_debug
  needs: ["build_linux_gcc7_x86_64_debug"]


###############################
# Build & test Windows
###############################

.buildAndTest_Windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    CMAKE_GENERATOR: "MinGW Makefiles"

build_windows_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Windows_gcc7_x86_64_debug
    - .build_windows

test_windows_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Windows_gcc7_x86_64_debug
    - .test_windows
  dependencies:
    - build_windows_gcc7_x86_64_debug
  needs: ["build_windows_gcc7_x86_64_debug"]


.buildAndTest_Windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-windows/windows-cpp-msvc2019:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug

build_windows_msvc16_x86_64_debug:
  extends:
    - .buildAndTest_Windows_msvc16_x86_64_debug
    - .build_windows

test_windows_msvc16_x86_64_debug:
  extends:
    - .buildAndTest_Windows_msvc16_x86_64_debug
    - .test_windows
  dependencies:
    - build_windows_msvc16_x86_64_debug
  needs: ["build_windows_msvc16_x86_64_debug"]

###############################
# Conan create & test Linux
###############################

Conan_CreateAndTest_Linux_Debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .conan_createAndTest

###############################
# Conan create & test Windows
###############################

###############################
# Deploy Conan (Linux)
###############################

deploy_conan:
  stage: deploy
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan scandyna/testing --profile:build linux_gcc7_x86_64 --profile:host linux_gcc7_x86_64 -s build_type=Debug --test-folder None
    - conan user --password ${CI_JOB_TOKEN} --remote scandyna ci_user
    - conan upload MdtCMakeConfig/*@scandyna/testing --remote scandyna --all -c
